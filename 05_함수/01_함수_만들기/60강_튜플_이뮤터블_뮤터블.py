a = (1, 2, 3)
print(a)
print(a[0])
print(a[1])
print(a[2])

# 요소를 하나 갖는 튜플
a = (1, 2, 3)
b = (1) # 이렇게 입력하면 괄호 안에 있는 숫자로 인식.
print(b, type(b))   # 1 <class 'int'>

b = (1, )   # 뒤에다가 쉼표를 찍어야 한다.

# 괄호를 사용하지 않아도 된다.
a = 1 ,2 ,3
b = 1, 

print(a)
print(b, type(b))   # (1,) <class 'tuple'>


# 튜플과 리스트의 차이
a = (1, 2, 3)
# a[1] = 5      # TypeError: 'tuple' object does not support item assignment

print(a)    

# 외관이 간단하다!
[a, b] = [10, 20]
(a, b) = (10, 20)
print(a, b)

def a():
    return (10, 20, 30)

(b, c, d) = a()
# (b, c, d) = (10, 20, 30)
print(b, c, d)     # 10 20 30
A = ['바나나', '사과', '고구마', '감자']

for (i, item) in enumerate(A):
    print(i, item)


B = {
    '이름': '별',
    '생일': (2019, 11, 14)
}

for key, value in B.items:
    print(key, value)

# 요소를 변경할 수 없다!
# 자료: 뮤터블 자료 + 이뮤터블 자료
A = {
    (2022, 1, 1): '새해',
    (2022, 12, 9): '생일',
    (2022, 12, 25): '크리스마스'
}
print(A)
# 튜플은 이뮤터블이기 때문에 딕셔너리의 키로 사용할 수 있다.
# 그래서 숫자, 문자열, 불, 튜플은 딕셔너리의 키로 사용할 수 있다.

# 리스트는 언해셔블이라서 딕셔너리의 키로 사용할 수 없다.

# 이뮤터블(변경할 수 없는, 불변의) 자료
# 변수에 넣었을 때
# 스택에 있는 값을 변경해야만 + 값을  변결할 수 있는 자료
# 숫자, 문자열, 불, 튜플
a = 10
a = 20 # 숫자들은 이뮤터블
b = True
b = False # 불도 이뮤터블
c = '안녕하세요'
c = '안녕히가세요' # 문자열도 이뮤터블

# 뮤터블(변할 수 있는) 자료
# 변수에 넣었을 때
# 스택에 있는 값을 변경하지 않아도 + 값을 변경할 수 있는 자료
# 리스트, 딕셔너리