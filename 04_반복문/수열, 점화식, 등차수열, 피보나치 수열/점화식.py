a = [None]
for n in range(1, 10 + 1):
    if n == 1:
        a_n = 1
    else:
        a_n = a[n-1] + 2
    a.append(a_n)
print(a)

# 수열을 천만번째 항까지 구현을 해야한다면 위 코드는 좋지 않다.
# 파이썬은 내부구조상 append를 사용해서 리스트의 길이를 늘리는 작업이 느리기 때문이다.

# 그럴 때는, 처음부터 큰 리스트를 만드는 것이 좋다.
# [None] * 1000000000 등

N = 100
a = [None] * (N + 1)    # 수열인덱스를 일치시키기 위해서 N + 1개를 만든 것.
for n in range(1, N + 1):
    if n == 1:
        a[1] = 1
    else:
        a[n] = a[n-1] + 2
print(a)

# 연산 효율을 증가시키기 위해서
# - append 사용을 지양한다.
# - append 대신 미리 긴 리스트를 만들어둔다.
# - 미리 만들어진 리스트의 공간에 인덱스를 통해 접근해서 값을 할당한다.

# 동적계획법 - 이전 항을 기반으로 다음 항을 구하는 법